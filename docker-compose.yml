services:

  sonarqube:
    image: sonarqube:latest
    container_name: plh-sonarqube
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
    ports:
      - "9000:9000"

  judge-dredd:
    build:
      context: /src/JudgeDredd
      dockerfile: Dockerfile
    container_name: plh-judgedredd
    ports:
      - "5005:8080"
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: plh-postgres
    environment:
      POSTGRES_USER: johndoe
      POSTGRES_PASSWORD: somew0rds
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: plh-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: scoth@tiger.com
      PGADMIN_DEFAULT_PASSWORD: 123456
    ports:
      - "5050:80"
    depends_on:
      - postgres

  minio:
    container_name: plh-minio-server
    image: minio/minio:latest
    ports:
      - "9008:9000"
      - "9009:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data
    
  vault:
    image: hashicorp/vault:latest
    container_name: plh-vault
    ports:
      - "8300:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_ADDR: "http://localhost:8300"
      VAULT_DEV_LISTEN_ADDRESS: "vault:8200"
    privileged: true

  redis:
    image: redis:latest
    container_name: plh-redis
    ports:
      - "6379:6379"

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: plh-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: johndoe
      KC_DB_PASSWORD: somew0rds
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    ports:
      - "8400:8080"
    depends_on:
      - postgres
    command: start-dev
    restart: unless-stopped

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:9.1.2
  #   container_name: plh-elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - xpack.security.enrollment.enabled=false
  #     - xpack.security.http.ssl.enabled=false
  #     - xpack.security.transport.ssl.enabled=false
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ports:
  #     - "9200:9200"
  #     - "9300:9300"
  #   volumes:
  #     - elasticsearch_data:/usr/share/elasticsearch/data

  mongodb:
    image: mongo:5.0
    container_name: plh-mongodb
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"

  opensearch:
    image: opensearchproject/opensearch:2.11.0
    container_name: plh-opensearch
    environment:
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "bootstrap.memory_lock=true"
      - "discovery.type=single-node"
      - "action.auto_create_index=false"
      - "plugins.security.ssl.http.enabled=false"
      - "plugins.security.disabled=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9201:9200"
      - "9301:9300"
    volumes:
      - opensearch_data:/usr/share/opensearch/data

  graylog:
    image: graylog/graylog:5.2
    container_name: plh-graylog
    environment:
        # admin / admin
      - GRAYLOG_PASSWORD_SECRET=&xB-Ub9=_7f!8Qa#{a=$4#}11?uKz1p]
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9001/
      - GRAYLOG_ELASTICSEARCH_HOSTS=http://opensearch:9200
      - GRAYLOG_MONGODB_URI=mongodb://admin:password@mongodb:27017/graylog?authSource=admin
    entrypoint: /usr/bin/tini -- wait-for-it opensearch:9200 -- /docker-entrypoint.sh
    links:
      - mongodb:mongo
      - opensearch
    restart: always
    depends_on:
      - mongodb
      - opensearch
    ports:
      - "9001:9000"
      - "1514:1514"
      - "1514:1514/udp"
      - "12201:12201"
      - "12201:12201/udp"
  
  # Redis alternative single node key value store
  kiwi-store-server:
    image: burakselim/kiwi-store-server:latest
    container_name: plh-kiwi-store-server
    ports:
      - "5555:5544" 

  rabbitmq:
    image: rabbitmq:4-management
    container_name: plh-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
      - "1883:1883"
    environment:
      RABBITMQ_HOST: '%'
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin1234
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test:
        - CMD
        - rabbitmq-diagnostics
        - '-q'
        - ping
      retries: 3
      timeout: 5s

volumes:
  postgres_data:
  minio_data:
  mongodb_data:
  opensearch_data:
  elasticsearch_data:
  rabbitmq_data:  